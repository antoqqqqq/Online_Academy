<div class="container mt-4">
    <div class="row">
        <div class="col-md-3">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Instructor Dashboard</h5>
                    <ul class="nav nav-pills flex-column">
                        <li class="nav-item">
                            <a class="nav-link" href="/instructor">Dashboard</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/instructor/courses/create">Create Course</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link active" href="#">Edit Course</a>
                        </li>
                    </ul>
                </div>
            </div>

            <!-- Course Progress -->
            <div class="card mt-3">
                <div class="card-body">
                    <h6 class="card-title">Course Completion</h6>
                    <div class="progress mb-2">
                        <div class="progress-bar 
                            {{#if (eq completionPercentage 100)}}bg-success
                            {{else if (gte completionPercentage 50)}}bg-warning
                            {{else}}bg-danger{{/if}}" 
                                role="progressbar" 
                                style="width: {{completionPercentage}}%"
                                aria-valuenow="{{completionPercentage}}" 
                                aria-valuemin="0" aria-valuemax="100">
                            {{completionPercentage}}%
                        </div>
                    </div>
                    <small class="text-muted">
                        {{#if course.is_complete}}
                            <span class="text-success">âœ… Course Complete</span>
                        {{else}}
                            {{completionPercentage}}% complete
                            {{#if (eq completionPercentage 100)}}
                                - Ready to mark complete
                            {{else}}
                                - Needs more content
                            {{/if}}
                        {{/if}}
                    </small>
                    
                    {{#unless course.is_complete}}
                    <div class="mt-2">
                        <button type="button" class="btn btn-success btn-sm w-100" 
                                id="markCompleteBtn" 
                                {{#if (eq completionPercentage 100)}}{{else}}disabled{{/if}}
                                data-bs-toggle="tooltip" 
                                title="{{#unless (eq completionPercentage 100)}}All lectures must have at least one video{{/unless}}">
                            {{#if (eq completionPercentage 100)}}
                                Mark as Complete
                            {{else}}
                                Complete All Lectures First
                            {{/if}}
                        </button>
                    </div>
                    {{/unless}}
                </div>
            </div>
        </div>

        <div class="col-md-9">
            {{#if success}}
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    Course updated successfully!
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            {{/if}}

            {{#if errors}}
                <div class="alert alert-danger">
                    <ul class="mb-0">
                        {{#each errors}}
                            <li>{{this}}</li>
                        {{/each}}
                    </ul>
                </div>
            {{/if}}

            <!-- Course Information Tab -->
            <div class="card">
                <div class="card-header">
                    <ul class="nav nav-tabs card-header-tabs">
                        <li class="nav-item">
                            <a class="nav-link active" href="#course-info" data-bs-toggle="tab">Course Information</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#lectures" data-bs-toggle="tab">Lectures & Videos</a>
                        </li>
                    </ul>
                </div>
                <div class="card-body">
                    <div class="tab-content">
                        <!-- Course Information Tab -->
                        <div class="tab-pane fade show active" id="course-info">
                            <form action="/instructor/courses/{{course.course_id}}/edit" method="POST" enctype="multipart/form-data">
                                <div class="mb-3">
                                    <label for="title" class="form-label">Course Title *</label>
                                    <input type="text" class="form-control" id="title" name="title" 
                                           value="{{course.title}}" required>
                                    <small class="text-muted">Current value: "{{course.title}}"</small>
                                </div>

                                <div class="mb-3">
                                    <label for="category_id" class="form-label">Category *</label>
                                    <select class="form-select" id="category_id" name="category_id" required>
                                        <option value="">Select a category</option>
                                        {{#each categories}}
                                            <option value="{{this.id}}" 
                                                    {{#if (eq this.id ../course.category_id)}}selected{{/if}}>
                                                {{this.category_name}} (ID: {{this.id}})
                                            </option>
                                        {{/each}}
                                    </select>
                                    <small class="text-muted">Current category ID: {{course.category_id}}</small>
                                </div>

                                <div class="mb-3">
                                    <label for="level" class="form-label">Level *</label>
                                    <select class="form-select" id="level" name="level" required>
                                        <option value="">Select level</option>
                                        <option value="Beginner" {{#if (eq course.level "Beginner")}}selected{{/if}}>Beginner</option>
                                        <option value="Intermediate" {{#if (eq course.level "Intermediate")}}selected{{/if}}>Intermediate</option>
                                        <option value="Advanced" {{#if (eq course.level "Advanced")}}selected{{/if}}>Advanced</option>
                                        <option value="All Levels" {{#if (eq course.level "All Levels")}}selected{{/if}}>All Levels</option>
                                    </select>
                                    <small class="text-muted">Current level: {{course.level}}</small>
                                </div>

                                <div class="mb-3">
                                    <label for="description" class="form-label">Short Description *</label>
                                    <textarea class="form-control" id="description" name="description" 
                                              rows="3" required>{{course.description}}</textarea>
                                </div>

                                <div class="mb-3">
                                    <label for="full_description" class="form-label">Full Description</label>
                                    <textarea class="form-control" id="full_description" name="full_description" 
                                              rows="10">{{course.full_description}}</textarea>
                                    <div class="form-text">
                                        Use rich text formatting for detailed course description
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label for="original_price" class="form-label">Original Price (VND) *</label>
                                            <input type="number" class="form-control" id="original_price" 
                                                   name="original_price" value="{{course.original_price}}" 
                                                   min="0" step="1000" required>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label for="current_price" class="form-label">Current Price (VND)</label>
                                            <input type="number" class="form-control" id="current_price" 
                                                   name="current_price" value="{{course.current_price}}" 
                                                   min="0" step="1000">
                                        </div>
                                    </div>
                                </div>

                                <div class="mb-3">
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" id="is_complete" 
                                               name="is_complete" value="true" 
                                               {{#if course.is_complete}}checked{{/if}}
                                               {{#unless (eq completionPercentage 100)}}disabled{{/unless}}>
                                        <label class="form-check-label" for="is_complete">
                                            Mark course as complete
                                            {{#unless (eq completionPercentage 100)}}
                                                <small class="text-muted d-block">
                                                    (Cannot mark incomplete - {{completionPercentage}}% complete)
                                                    {{#if (eq completionPercentage 0)}}
                                                        - Add videos to all lectures
                                                    {{else}}
                                                        - Some lectures are missing videos
                                                    {{/if}}
                                                </small>
                                            {{/unless}}
                                        </label>
                                    </div>
                                </div>

                                <div class="mb-3">
                                    <label for="image" class="form-label">Course Image</label>
                                    <input type="file" class="form-control" id="image" name="image" 
                                        accept="image/jpeg,image/png,image/gif,image/webp" onchange="previewImage(this)">
                                    <div class="form-text">
                                        <strong>Supported formats:</strong> JPG, PNG, GIF, WebP<br>
                                        <strong>Maximum file size:</strong> 5MB<br>
                                        <strong>Recommended dimensions:</strong> 1280x720 pixels
                                    </div>
                                    
                                    <!-- Error display for upload issues -->
                                    {{#if errors}}
                                        <div class="alert alert-danger mt-2">
                                            <ul class="mb-0">
                                                {{#each errors}}
                                                    {{#if (or (includes this "File too large") (includes this "Only image files") (includes this "Unexpected file"))}}
                                                        <li><i class="fas fa-exclamation-triangle"></i> {{this}}</li>
                                                    {{/if}}
                                                {{/each}}
                                            </ul>
                                        </div>
                                    {{/if}}
                                    
                                    <!-- Current Image Display -->
                                    {{#if course.image_url}}
                                        <div class="mt-2">
                                            <p class="text-muted mb-1">Current Image:</p>
                                            <img src="{{course.image_url}}" alt="Current course image" 
                                                style="max-height: 200px; max-width: 100%;" class="border rounded"
                                                onerror="this.onerror=null; this.src='/static/default/default-course.jpg'">
                                            <div class="mt-1">
                                                <small class="text-muted">{{course.image_url}}</small>
                                            </div>
                                        </div>
                                    {{else}}
                                        <div class="mt-2">
                                            <p class="text-muted mb-1">Current Image:</p>
                                            <img src="/static/default/default-course.jpg" alt="Default course image" 
                                                style="max-height: 200px; max-width: 100%;" class="border rounded">
                                            <div class="mt-1">
                                                <small class="text-muted">Using default course image</small>
                                            </div>
                                        </div>
                                    {{/if}}
                                    
                                    <!-- New Image Preview -->
                                    <div id="imagePreview" class="mt-2" style="display: none;">
                                        <p class="text-muted mb-1">New Image Preview:</p>
                                        <img id="preview" src="#" alt="Image preview" style="max-height: 200px; max-width: 100%;" class="border rounded">
                                        <div class="mt-1">
                                            <button type="button" class="btn btn-sm btn-outline-danger" onclick="removeImagePreview()">Remove New Image</button>
                                        </div>
                                    </div>
                                </div>

                                <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                                    <button type="submit" class="btn btn-primary">Update Course</button>
                                </div>
                            </form>
                        </div>

                        <!-- Lectures & Videos Tab -->
                        <div class="tab-pane fade" id="lectures">
                            <div class="d-flex justify-content-between align-items-center mb-3">
                                <h5>Course Content</h5>
                                <button type="button" class="btn btn-primary btn-sm" 
                                        data-bs-toggle="modal" data-bs-target="#addLectureModal">
                                    Add Lecture
                                </button>
                            </div>

                            {{#if lectures.length}}
                                <div class="accordion" id="lecturesAccordion">
                                    {{#each lectures}}
                                    <div class="accordion-item">
                                        <h2 class="accordion-header">
                                            <button class="accordion-button {{#unless @first}}collapsed{{/unless}}" 
                                                    type="button" data-bs-toggle="collapse" 
                                                    data-bs-target="#lecture{{this.id}}">
                                                <div class="d-flex justify-content-between align-items-center w-100 me-3">
                                                    <span>
                                                        <strong>{{this.title}}</strong>
                                                        <!-- PREVIEW BADGE -->
                                                        {{#if this.is_preview}}
                                                            <span class="badge bg-info ms-2">Preview Available</span>
                                                        {{/if}}
                                                        <!-- VIDEO COUNT BADGE -->
                                                        {{#if this.videos.length}}
                                                            <span class="badge bg-success ms-2">{{this.videos.length}} video(s)</span>
                                                        {{else}}
                                                            <span class="badge bg-warning ms-2">No videos</span>
                                                        {{/if}}
                                                    </span>
                                                    <span class="text-muted small">{{this.time}} minutes</span>
                                                </div>
                                            </button>
                                        </h2>
                                        <div id="lecture{{this.id}}" 
                                             class="accordion-collapse collapse {{#if @first}}show{{/if}}" 
                                             data-bs-parent="#lecturesAccordion">
                                            <div class="accordion-body">
                                                <div class="d-flex justify-content-between align-items-center mb-3">
                                                    <h6>Lecture Details</h6>
                                                    <div>
                                                        <!-- PREVIEW STATUS INDICATOR -->
                                                        {{#if this.is_preview}}
                                                            <span class="badge bg-info me-2">Preview Enabled</span>
                                                        {{else}}
                                                            <span class="badge bg-secondary me-2">Preview Disabled</span>
                                                        {{/if}}
                                                        <button type="button" class="btn btn-outline-primary btn-sm edit-lecture"
                                                                data-lecture-id="{{this.id}}"
                                                                data-title="{{this.title}}"
                                                                data-description="{{this.description}}"
                                                                data-time="{{this.time}}"
                                                                data-is-preview="{{this.is_preview}}">
                                                            Edit Lecture
                                                        </button>
                                                        <button type="button" class="btn btn-outline-danger btn-sm delete-lecture"
                                                                data-lecture-id="{{this.id}}">
                                                            Delete Lecture
                                                        </button>
                                                    </div>
                                                </div>
                                                
                                                <p class="text-muted">{{this.description}}</p>
                                                
                                                <!-- LECTURE METADATA -->
                                                <div class="row mb-3">
                                                    <div class="col-md-6">
                                                        <small class="text-muted">
                                                            <strong>Duration:</strong> {{this.time}} minutes
                                                        </small>
                                                    </div>
                                                    <div class="col-md-6">
                                                        <small class="text-muted">
                                                            <strong>Preview:</strong> 
                                                            {{#if this.is_preview}}
                                                                <span class="text-success">Yes</span>
                                                            {{else}}
                                                                <span class="text-secondary">No</span>
                                                            {{/if}}
                                                        </small>
                                                    </div>
                                                </div>
                                                
                                                <div class="d-flex justify-content-between align-items-center mb-3">
                                                    <h6>Videos</h6>
                                                    <button type="button" class="btn btn-success btn-sm" 
                                                            data-bs-toggle="modal" data-bs-target="#addVideoModal"
                                                            data-lecture-id="{{this.id}}">
                                                        Add Video
                                                    </button>
                                                </div>

                                                {{#if this.videos.length}}
                                                    <div class="list-group">
                                                        {{#each this.videos}}
                                                        <div class="list-group-item d-flex justify-content-between align-items-center">
                                                            <div>
                                                                <strong>{{this.video_title}}</strong>
                                                                <br>
                                                                <small class="text-muted">
                                                                    Duration: {{this.time}} seconds | 
                                                                    URL: {{this.video_url}}
                                                                </small>
                                                            </div>
                                                            <div>
                                                                <a href="{{this.video_url}}" target="_blank" 
                                                                   class="btn btn-outline-info btn-sm">
                                                                    View
                                                                </a>
                                                                <button type="button" class="btn btn-outline-danger btn-sm delete-video"
                                                                        data-video-id="{{this.id}}">
                                                                    Delete
                                                                </button>
                                                            </div>
                                                        </div>
                                                        {{/each}}
                                                    </div>
                                                {{else}}
                                                    <div class="alert alert-warning">
                                                        No videos added to this lecture yet.
                                                    </div>
                                                {{/if}}
                                            </div>
                                        </div>
                                    </div>
                                    {{/each}}
                                </div>
                            {{else}}
                                <div class="text-center py-4">
                                    <i class="fas fa-video fa-3x text-muted mb-3"></i>
                                    <p class="text-muted">No lectures yet. Add your first lecture to get started.</p>
                                </div>
                            {{/if}}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Add Lecture Modal -->
<div class="modal fade" id="addLectureModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add New Lecture</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="addLectureForm">
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="lectureTitle" class="form-label">Lecture Title *</label>
                        <input type="text" class="form-control" id="lectureTitle" name="title" required>
                    </div>
                    <div class="mb-3">
                        <label for="lectureDescription" class="form-label">Description</label>
                        <textarea class="form-control" id="lectureDescription" name="description" rows="3"></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="lectureTime" class="form-label">Duration (minutes)</label>
                        <input type="number" class="form-control" id="lectureTime" name="time" min="0" step="1">
                    </div>
                    <div class="mb-3">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="lecturePreview" name="is_preview" value="true">
                            <label class="form-check-label" for="lecturePreview">
                                Allow preview (students can watch without enrolling)
                            </label>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Add Lecture</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Add Video Modal -->
<div class="modal fade" id="addVideoModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add Video to Lecture</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="addVideoForm" enctype="multipart/form-data">
                <div class="modal-body">
                    <input type="hidden" id="videoLectureId" name="lectureId">
                    <div class="mb-3">
                        <label for="videoTitle" class="form-label">Video Title *</label>
                        <input type="text" class="form-control" id="videoTitle" name="video_title" required>
                    </div>
                    <div class="mb-3">
                        <label for="videoDescription" class="form-label">Description</label>
                        <textarea class="form-control" id="videoDescription" name="description" rows="3"></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="videoDuration" class="form-label">Duration (seconds)</label>
                        <input type="number" class="form-control" id="videoDuration" name="duration" min="0" step="1">
                    </div>
                    <div class="mb-3">
                        <label for="videoFile" class="form-label">Video File *</label>
                        <input type="file" class="form-control" id="videoFile" name="video" 
                               accept="video/mp4,video/avi,video/mov,video/wmv,video/flv,video/webm" required>
                        <div class="form-text">
                            <strong>Supported formats:</strong> MP4, AVI, MOV, WMV, FLV, WebM<br>
                            <strong>Maximum file size:</strong> 500MB
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Add Video</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Edit Lecture Modal -->
<div class="modal fade" id="editLectureModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Lecture</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="editLectureForm">
                <div class="modal-body">
                    <input type="hidden" id="editLectureId" name="lectureId">
                    <div class="mb-3">
                        <label for="editLectureTitle" class="form-label">Lecture Title *</label>
                        <input type="text" class="form-control" id="editLectureTitle" name="title" required>
                    </div>
                    <div class="mb-3">
                        <label for="editLectureDescription" class="form-label">Description</label>
                        <textarea class="form-control" id="editLectureDescription" name="description" rows="3"></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="editLectureTime" class="form-label">Duration (minutes)</label>
                        <input type="number" class="form-control" id="editLectureTime" name="time" min="0" step="1">
                    </div>
                    <div class="mb-3">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="editLecturePreview" name="is_preview" value="true">
                            <label class="form-check-label" for="editLecturePreview">
                                Allow preview (students can watch without enrolling)
                            </label>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Update Lecture</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
// Image Preview Functions
function previewImage(input) {
    const preview = document.getElementById('preview');
    const previewContainer = document.getElementById('imagePreview');
    
    if (input.files && input.files[0]) {
        const reader = new FileReader();
        
        reader.onload = function(e) {
            preview.src = e.target.result;
            previewContainer.style.display = 'block';
        }
        
        reader.readAsDataURL(input.files[0]);
    } else {
        previewContainer.style.display = 'none';
    }
}

function removeImagePreview() {
    const input = document.getElementById('image');
    const previewContainer = document.getElementById('imagePreview');
    
    input.value = ''; // Clear the file input
    previewContainer.style.display = 'none'; // Hide preview
}

// Initialize WYSIWYG Editor
function initWYSIWYG() {
    const fullDescription = document.getElementById('full_description');
    if (fullDescription) {
        // Simple WYSIWYG functionality - you can integrate with TinyMCE, CKEditor, etc.
        fullDescription.style.height = '300px';
        fullDescription.style.fontFamily = 'Arial, sans-serif';
        fullDescription.style.fontSize = '14px';
        fullDescription.style.lineHeight = '1.5';
    }
}

// Main JavaScript
document.addEventListener('DOMContentLoaded', function() {
    const courseId = {{course.course_id}};
    
    // Initialize WYSIWYG
    initWYSIWYG();

    // Add Lecture Form
    document.getElementById('addLectureForm').addEventListener('submit', async function(e) {
        e.preventDefault();
        
        const formData = new FormData(this);
        
        try {
            const response = await fetch(`/instructor/courses/${courseId}/lectures`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(Object.fromEntries(formData))
            });
            
            const result = await response.json();
            
            if (result.success) {
                location.reload();
            } else {
                alert('Error: ' + result.message);
            }
        } catch (error) {
            alert('Error adding lecture');
        }
    });

    // Add Video Form with retry logic
    document.getElementById('addVideoForm').addEventListener('submit', async function(e) {
        e.preventDefault();
        
        const formData = new FormData(this);
        const lectureId = document.getElementById('videoLectureId').value;
        
        // Show loading state
        const submitBtn = this.querySelector('button[type="submit"]');
        const originalText = submitBtn.innerHTML;
        submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Uploading...';
        submitBtn.disabled = true;
        
        try {
            const response = await fetch(`/instructor/lectures/${lectureId}/videos`, {
                method: 'POST',
                body: formData
            });
            
            const result = await response.json();
            
            if (result.success) {
                // Success - reload page
                location.reload();
            } else {
                // Check if it's a sequence error and offer retry
                if (result.message.includes('database error') || result.message.includes('sequence')) {
                    if (confirm('Database error occurred. Would you like to try fixing it and retry?')) {
                        // Try to fix sequences and retry
                        await fixSequencesAndRetry(lectureId, formData);
                    } else {
                        alert('Error: ' + result.message);
                    }
                } else {
                    alert('Error: ' + result.message);
                }
            }
        } catch (error) {
            console.error('Error adding video:', error);
            alert('Network error occurred. Please check your connection and try again.');
        } finally {
            // Restore button state
            submitBtn.innerHTML = originalText;
            submitBtn.disabled = false;
        }
    });

    // Helper function to fix sequences and retry
    async function fixSequencesAndRetry(lectureId, formData) {
        try {
            // First, try to fix sequences
            const fixResponse = await fetch('/instructor/fix-sequences', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                }
            });
            
            const fixResult = await fixResponse.json();
            
            if (fixResult.success) {
                console.log('âœ… Sequences fixed, retrying video upload...');
                
                // Retry the video upload
                const retryResponse = await fetch(`/instructor/lectures/${lectureId}/videos`, {
                    method: 'POST',
                    body: formData
                });
                
                const retryResult = await retryResponse.json();
                
                if (retryResult.success) {
                    location.reload();
                } else {
                    alert('Retry failed: ' + retryResult.message);
                }
            } else {
                alert('Failed to fix sequences: ' + fixResult.message);
            }
        } catch (error) {
            console.error('Error in sequence fix retry:', error);
            alert('Failed to fix sequences. Please contact support.');
        }
    }

    // Set lecture ID when opening add video modal
    document.getElementById('addVideoModal').addEventListener('show.bs.modal', function(event) {
        const button = event.relatedTarget;
        const lectureId = button.getAttribute('data-lecture-id');
        document.getElementById('videoLectureId').value = lectureId;
    });

    // Edit Lecture
    document.querySelectorAll('.edit-lecture').forEach(button => {
        button.addEventListener('click', function() {
            const lectureId = this.dataset.lectureId;
            const title = this.dataset.title;
            const description = this.dataset.description;
            const time = this.dataset.time;
            const isPreview = this.dataset.isPreview === 'true';

            document.getElementById('editLectureId').value = lectureId;
            document.getElementById('editLectureTitle').value = title;
            document.getElementById('editLectureDescription').value = description;
            document.getElementById('editLectureTime').value = time;
            document.getElementById('editLecturePreview').checked = isPreview;

            new bootstrap.Modal(document.getElementById('editLectureModal')).show();
        });
    });

    // Update Lecture Form
    document.getElementById('editLectureForm').addEventListener('submit', async function(e) {
        e.preventDefault();
        
        const lectureId = document.getElementById('editLectureId').value;
        const formData = new FormData(this);
        
        try {
            const response = await fetch(`/instructor/lectures/${lectureId}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(Object.fromEntries(formData))
            });
            
            const result = await response.json();
            
            if (result.success) {
                location.reload();
            } else {
                alert('Error: ' + result.message);
            }
        } catch (error) {
            alert('Error updating lecture');
        }
    });

    // Delete Lecture
    document.querySelectorAll('.delete-lecture').forEach(button => {
        button.addEventListener('click', function() {
            const lectureId = this.dataset.lectureId;
            
            if (confirm('Are you sure you want to delete this lecture? This will also delete all associated videos.')) {
                fetch(`/instructor/lectures/${lectureId}`, {
                    method: 'DELETE'
                })
                .then(response => response.json())
                .then(result => {
                    if (result.success) {
                        location.reload();
                    } else {
                        alert('Error: ' + result.message);
                    }
                })
                .catch(error => {
                    alert('Error deleting lecture');
                });
            }
        });
    });

    // Delete Video
    document.querySelectorAll('.delete-video').forEach(button => {
        button.addEventListener('click', function() {
            const videoId = this.dataset.videoId;
            
            if (confirm('Are you sure you want to delete this video?')) {
                fetch(`/instructor/videos/${videoId}`, {
                    method: 'DELETE'
                })
                .then(response => response.json())
                .then(result => {
                    if (result.success) {
                        location.reload();
                    } else {
                        alert('Error: ' + result.message);
                    }
                })
                .catch(error => {
                    alert('Error deleting video');
                });
            }
        });
    });

    // Mark Course Complete
    document.getElementById('markCompleteBtn').addEventListener('click', function() {
        if (confirm('Are you sure you want to mark this course as complete? This action cannot be undone.')) {
            fetch(`/instructor/courses/${courseId}/complete`, {
                method: 'POST'
            })
            .then(response => response.json())
            .then(result => {
                if (result.success) {
                    location.reload();
                } else {
                    alert('Error: ' + result.message);
                }
            })
            .catch(error => {
                alert('Error marking course complete');
            });
        }
    });
});
</script>